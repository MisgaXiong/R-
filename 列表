列表是一种特殊的向量，不同之前的向量。之前的向量可以理解为原子型，列表中可以保存为不同格式的数据。可以是字符串型、数值型等。
j<-list(name="joe",salary=55000,union=T)
j
$name
[1] "joe"

$salary
[1] 55000

$union
[1] TRUE

j[2]
$salary
[1] 55000

j$salary
[1] 55000

 j[[2]]
[1] 55000

增加或者删除
z<-list(a="abc",b=12)
> z
$a(这个是列表的标签)
[1] "abc"

$b
[1] 12

 z$c<-"salary"
> z
$a
[1] "abc"

$b
[1] 12

$c
[1] "salary"

z[-2]
$a
[1] "abc"

$c
[1] "salary"

z$c<-NULL
> z
$a
[1] "abc"

$b
[1] 12

因为列表属于一种特殊向量，所以列表的长度也可以用length()计算
列题：计算文本文件中的英文单词位置，并输出。在初学者不了解scan函数的情况下，可以使用read.table函数，但是read.table读取文件需要保证每行的列相同。
This is the first time I study the R program for list. 1 2 3
以上英文是文本文件

k<-read.table("listwords.txt",sep = " ",stringsAsFactors = FALSE)
k<-as.list(k)
searchwd<-function(x){
  for(i in 1:length(x)){
    ifelse(mode(x[[i]])=="character",a<-c(a,i),a<-c(a))
  }
  return(a)
}
 searchwd(k)
 [1]  1  2  3  1  2  3  4  5  6  7  8  9 10 11 12
 
 使用names函数可以获取列表标签，使用unlist函数可以返回列表对应的字符串向量，若列表内全为数值，则返回数值向量
 可以使用unnames函数或者names(yourlist)<-NULL取消列表标签
 
 lapply(list(1:3,25:29),mean)
[[1]]
[1] 2

[[2]]
[1] 27
 lapply函数对列表中的每一个组件使用函数并返回列表值，sapply函数则返回向量或者矩阵值
 
 计算核酸序列中碱基含量的小程序
 th<-function(x){
  l<-c()
  for(i in 1:length(x)){
    l<-paste(l,x[i],sep = "")
  }
  return(l)
}

tj<-function(x){
  l<-substring(x,1:nchar(x),1:nchar(x))
  q<-c()
  w<-c()
  e<-c()
  r<-c()
  for(i in 1:length(l)){
    if(l[i]=="A"){
      q<-c(q,i)}
    else if(l[i]=="T"){
      w<-c(w,i)}
    else if(l[i]=="C"){
      e<-c(e,i)}
    else if(l[i]=="G"){
      r<-c(r,i)}
  }
  a<-length(q)/length(l)
  b<-length(w)/length(l)
  c<-length(e)/length(l)
  r<-length(r)/length(l)
  f<-list(A=a, T=b, C=c, G=r)
  return(f)
  }
  从NCBI下载TCF4的FASTA序列
  k<-scan("seq.txt", what="character", sep=" ")
  tj(th(k))
$A
[1] 0.2978877

$T
[1] 0.3019683

$C
[1] 0.1911906

$G
[1] 0.2089534
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
